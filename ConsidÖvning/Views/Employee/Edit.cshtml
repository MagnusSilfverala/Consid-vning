@model ConsidÖvning.Models.ViewModels.EmployeeVM

@{
	ViewBag.Title = "Edit";
}

<h2>Edit Employee </h2>

@if (@ViewData["ErrorMessage"] != null) {
<div style="background-color: #ffcccc; padding: 15px;
		font-weight: bold;">
	@ViewData["ErrorMessage"]
</div>
	}
@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", id = "salaryField" } })
				@Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IsCEO, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					@Html.EditorFor(model => model.IsCEO, new { htmlAttributes = new { @id = "ceoField" } })
					@Html.ValidationMessageFor(model => model.IsCEO, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group hideForCEO">
			@Html.LabelFor(model => model.IsManager, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					@Html.EditorFor(model => model.IsManager, new { htmlAttributes = new { @id = "isManagerField" } })
					@Html.ValidationMessageFor(model => model.IsManager, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		

		<div class="form-group hideForCEO">
			@Html.LabelFor(model => model.SelectedManager, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.SelectedManager, new SelectList(Model.ManagerList, "Id", "DisplayName"), "-- Select manager --", new { @class = "dropDownClass", id = "managerDD" })
				@Html.ValidationMessageFor(model => model.SelectedManager, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" onclick="return validateValues()" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	<script type="text/javascript">
		window.onload = function () {
			hideIfCEO();
		}

		function hideIfCEO() {

			if ($('#ceoField').is(':checked')) {
				$('.hideForCEO').hide();
			}
		}

		$('#ceoField').change(function () {
			if ($(this).is(':checked')) {
				$('.hideForCEO').hide();
				$('.managerDD').val(null);
				$('.managerIdField').val(null);
				$('.isManagerField').val(false);

			} else {
				$('.hideForCEO').show();
			}
		});

		function validateValues() {
			return true;
		}

	</script>

	<style type="text/css">
		.dropDownClass {
			width: 100%;
			height: 4vh;
			border-radius: 5px;
		}
	</style>
}
