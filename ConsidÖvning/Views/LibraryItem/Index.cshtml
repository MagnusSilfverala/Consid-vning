@model IEnumerable<ConsidÖvning.Models.ViewModels.LibraryItemVM>

@{
	ViewBag.Title = "Index";
}

<input id="orderHidden" name="orderHidden" type="hidden" value="@ViewBag.orderState">

<h2>Items</h2>

<p>
	@Html.ActionLink("Add Item", "Create")
</p>

@if (Model.Count() > 0) {
	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			@Html.ActionLink("Order by type", "Index", "LibraryItem", new { sortOrder = "type" }, new { @class = "btn btn-default", @id = "ordetTypeBtn", @style = "margin-left: 5vw; background-color: #e6ffe6; float:right; margin-bottom: 1vh;" })
			@Html.ActionLink("Order by Category", "Index", "LibraryItem", new { sortOrder = "category" }, new { @class = "btn btn-default", @id = "ordetCategoryBtn", @style = "margin-left: 5vw; background-color: #e6ffe6; float:right; margin-bottom: 1vh;" })
		</div>
	</div>
	<table class="table">
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Category)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Author)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Pages)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.RunTimeMinutes)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.IsBorrowable)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Borrower)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BorrowDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Type)
			</th>
			<th></th>
		</tr>

		@foreach (var item in Model) {
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Category.CategoryName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Title)
					@if (item.Acronym != null) {
						@Html.Raw("(")
						@Html.DisplayFor(modelItem => item.Acronym)
						@Html.Raw(")")
					}
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Author)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Pages)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.RunTimeMinutes)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.IsBorrowable)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Borrower)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.BorrowDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Type)
				</td>
				<td>
					@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
					@Html.ActionLink("Delete", "Delete", new { id = item.Id })
				</td>
			</tr>
		}

	</table>
} else {
	<h3>No Library items are created yet.</h3>
}
	

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script type="text/javascript">
		window.onload = function () {
			hideSortBtn();
		}

		function hideSortBtn() {
			var sortParam = $('#orderHidden').val();
			if (sortParam == "type") {
				$('#ordetCategoryBtn').show();
				$('#ordetTypeBtn').hide();
				
			} else {
				$('#ordetCategoryBtn').hide();
				$('#ordetTypeBtn').show();	
			}
		}

	</script>


}




